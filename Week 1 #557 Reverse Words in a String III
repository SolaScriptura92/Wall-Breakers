class Solution {
public:
    string reverseWords(string s) 
    {
        vector<string> reversedWords;
        string temp;
        int start = 0;
        string finalString = "";
        
        s += " "; //add extra space to the string copy at the end to remove the need for an edge case at the end of the loop. This way the algorithm runs consistently
        
        for(int i = 0; i < s.length(); i++)
        {
            
            if(s[i] == ' ')
            {
                temp = s.substr(start, i - start);
                reverse(temp.begin(), temp.end());
                reversedWords.push_back(temp);
                start = i + 1;
            }
        }
        
        for(int j = 0; j < reversedWords.size() - 1; j++)
        {
            finalString += reversedWords[j] + " ";
        }
        
        finalString += reversedWords[reversedWords.size() - 1];
        
        return finalString;
    }
};
