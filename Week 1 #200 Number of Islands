class Solution {
public:
    int numIslands(vector<vector<char>>& grid) 
    {
        if(grid.size() == 0 || grid[0].size() == 0)
            return 0;
        
        
        int numIslands = 0;
        
        for(int i = 0; i < grid.size(); i++)
        {
            for(int j = 0; j < grid[0].size(); j++)
            {
                if(grid[i][j] == '1')
                {
                    numIslands++;
                    conquerIsland(i, j, grid);
                }
            }
        }
        
        return numIslands;
    }
    
    
    void conquerIsland(int i, int j, vector<vector<char>>& grid)
    {
        if(grid[i][j] == '1')
        {
            grid[i][j] = '*';
        
        
            if( (i - 1) >= 0)
                conquerIsland(i - 1, j, grid);
        
            if( (i + 1) <= grid.size() - 1 )
                conquerIsland(i + 1, j, grid);
        
            if( (j - 1) >= 0 )
                conquerIsland(i, j - 1, grid);
        
            if( (j + 1) <= grid[0].size() - 1 )
                conquerIsland(i, j + 1, grid);
        
        }
        
        return;
    }
};
